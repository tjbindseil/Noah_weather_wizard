"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.testWithClient = void 0;
const globals_1 = require("@jest/globals");
const client_1 = require("../src/client");
function testWithClient(name, fn, timeout) {
    const client = new client_1.Client({
        extraFloatDigits: 2,
        preparedStatementPrefix: name + " "
    });
    client.on('notice', console.log);
    (0, globals_1.test)(name, () => __awaiter(this, void 0, void 0, function* () {
        let connected = false;
        const p2 = client.connect();
        const p1 = fn(client);
        try {
            yield p1;
            yield p2;
            connected = true;
        }
        finally {
            if (!connected) {
                yield p2;
            }
            if (!client.closed) {
                yield client.end();
            }
        }
        if (!client.closed)
            throw new Error("Expected client to be closed");
    }), timeout);
}
exports.testWithClient = testWithClient;
//# sourceMappingURL=helper.js.map